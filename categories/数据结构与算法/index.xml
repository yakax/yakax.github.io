<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>数据结构与算法 - 分类 - yakax</title><link>https://yakax.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link><description>数据结构与算法 - 分类 - yakax</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yakax1569@gmail.com (yakax)</managingEditor><webMaster>yakax1569@gmail.com (yakax)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 05 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://yakax.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml"/><item><title>HashMap 常见问题Java8</title><link>https://yakax.github.io/hashmap-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98java8/</link><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://yakax.github.io/hashmap-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98java8/</guid><description><![CDATA[<h3 id="hashmap并发修改异常或者循环时删除异常">HashMap并发修改异常,或者循环时删除异常</h3>
<p><code>ConcurrentModificationException</code>基本都是modCount修改后与原modCount不相等而暴露的异常。很多集合都会有这个问题</p>
<p>编写者抛这个异常的是想 快速失败，暴露异常。让开发者自己解决</p>]]></description></item><item><title>数据结构学习-动态数组</title><link>https://yakax.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://yakax.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</guid><description>&lt;blockquote>
&lt;p>学习数据结构 -动态数组 模仿 ArrayList&lt;/p>
&lt;/blockquote></description></item><item><title>LinkedList真的是查找慢增删快吗</title><link>https://yakax.github.io/linkedlist%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9F%A5%E6%89%BE%E6%85%A2%E5%A2%9E%E5%88%A0%E5%BF%AB%E5%90%97/</link><pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate><author>作者</author><guid>https://yakax.github.io/linkedlist%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9F%A5%E6%89%BE%E6%85%A2%E5%A2%9E%E5%88%A0%E5%BF%AB%E5%90%97/</guid><description><![CDATA[<p><strong>以前别人面试我,这个问题的时候我一般都是回答：linkendlist增删改块，arraylist查找块。直到最近我看了掘金的一篇博文，才发现，实践出真知啊。</strong></p>
<h4 id="测试结果">测试结果</h4>
<blockquote>
<p>分别在ArrayList和LinkedList的头部、尾部和中间三个位置插入与查找100000个元素所消耗的时间来进行对比测试，下面是测试结果</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">List</th>
<th style="text-align:center">插入</th>
<th style="text-align:center">查找</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ArrayList头部</td>
<td style="text-align:center">2859ms</td>
<td style="text-align:center">7ms</td>
</tr>
<tr>
<td style="text-align:center">ArrayList尾部</td>
<td style="text-align:center">26ms</td>
<td style="text-align:center">12ms</td>
</tr>
<tr>
<td style="text-align:center">ArrayList中间</td>
<td style="text-align:center">848ms</td>
<td style="text-align:center">13ms</td>
</tr>
<tr>
<td style="text-align:center">LinkedList头部</td>
<td style="text-align:center">15ms</td>
<td style="text-align:center">11ms</td>
</tr>
<tr>
<td style="text-align:center">LinkedList尾部</td>
<td style="text-align:center">28ms</td>
<td style="text-align:center">11ms</td>
</tr>
<tr>
<td style="text-align:center">LinkedList中间</td>
<td style="text-align:center">15981ms</td>
<td style="text-align:center">34928ms</td>
</tr>
</tbody>
</table>]]></description></item></channel></rss>