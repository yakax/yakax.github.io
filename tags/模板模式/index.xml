<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>模板模式 - 标签 - yakax</title><link>https://yakax.gitee.io/tags/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</link><description>模板模式 - 标签 - yakax</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yakax1569@gmail.com (yakax)</managingEditor><webMaster>yakax1569@gmail.com (yakax)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 17 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://yakax.gitee.io/tags/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/" rel="self" type="application/rss+xml"/><item><title>模板设计模式</title><link>https://yakax.gitee.io/%E6%A8%A1%E6%9D%BF%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://yakax.gitee.io/%E6%A8%A1%E6%9D%BF%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description><![CDATA[<h4 id="应用场景">应用场景</h4>
<p>定义一个模板结构，将具体内容延迟到子类去实现,<font color=red>在不改变模板结构的前提下在子类中重新定义模板中的内容。</font>
比如JDBC；</p>
<h4 id="优点">优点</h4>
<ul>
<li>提高代码复用性
将相同部分的代码放在抽象的父类中，而将不同的代码放入不同的子类中</li>
<li>实现了反向控制
通过一个父类调用其子类的操作，通过对子类的具体实现扩展不同的行为，实现了反向控制 &amp; 符合“开闭原则”</li>
</ul>
<h4 id="缺点">缺点</h4>
<p>引入了抽象类，每一个不同的实现都需要一个子类来实现，导致类的个数增加，从而增加了系统实现的复杂度。</p>]]></description></item></channel></rss>