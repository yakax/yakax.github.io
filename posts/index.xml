<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - yakax</title><link>https://yakax.github.io/posts/</link><description>所有文章 | yakax</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yakax1569@gmail.com (yakax)</managingEditor><webMaster>yakax1569@gmail.com (yakax)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 24 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://yakax.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Docker分布式部署zookeeper集群</title><link>https://yakax.github.io/docker%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2zookeeper%E9%9B%86%E7%BE%A4/</link><pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://yakax.github.io/docker%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2zookeeper%E9%9B%86%E7%BE%A4/</guid><description><![CDATA[<h4 id="准备">准备</h4>
<ul>
<li>3台机器</li>
<li><a href="https://yakax.github.io/2018/11/05/%E5%AD%A6%E4%B9%A0docker%E5%B9%B6%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E8%87%AA%E5%90%AF%E5%8A%A8MySQL8/" target="_blank" rel="noopener noreffer">安装docker</a></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">HOST1: centos7.5 :172.16.217.135 zk1
HOST2: centos7.5 :172.16.217.136 zk2
HOST3: centos7.5 :172.16.217.137 zk3
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>JVM初始化顺序</title><link>https://yakax.github.io/jvm%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%BA%E5%BA%8F/</link><pubDate>Fri, 07 Dec 2018 15:04:00 +0000</pubDate><author>作者</author><guid>https://yakax.github.io/jvm%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%BA%E5%BA%8F/</guid><description><![CDATA[<blockquote>
<p>类的静态成员 &ndash;&gt; 类的实例成员 &ndash;&gt; 类的构造方法
说到这里，有一个很好的问题。比如一个类中静态变量是一个该类的实例，那么此时类的初始化顺序是什么样的呢？</p>
</blockquote>
<h4 id="昨天在群里看到这个问题很有趣今天来分析一波">昨天在群里看到这个问题，很有趣，今天来分析一波</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">test</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="n">test</span>  <span class="n">t1</span><span class="o">=</span><span class="k">new</span> <span class="n">test</span><span class="o">();</span>
    <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;执行1&#34;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">static</span>
    <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;执行2&#34;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">test</span> <span class="n">t2</span><span class="o">=</span><span class="k">new</span> <span class="n">test</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>2018年度复盘</title><link>https://yakax.github.io/2018%E5%B9%B4%E5%BA%A6%E5%A4%8D%E7%9B%98/</link><pubDate>Wed, 23 Sep 1998 00:00:00 +0000</pubDate><author>作者</author><guid>https://yakax.github.io/2018%E5%B9%B4%E5%BA%A6%E5%A4%8D%E7%9B%98/</guid><description></description></item></channel></rss>